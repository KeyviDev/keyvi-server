syntax="proto2";
option cc_generic_services = true;

package keyvi_server.service;

import "match.proto";

message InfoRequest {
};

message InfoResponse {
    map<string, string>  info = 1;
};

message GetRequest {
    required string key = 1;
};

message GetRawRequest {
    required string key = 1;
};

message GetNearRequest {
    required string key = 1;
    optional int32 min_exact_prefix = 2 [default = 2];
	optional bool greedy = 3 [default = false];
};

message GetFuzzyRequest {
    required string key = 1;
    optional int32 max_edit_distance = 2 [default = 3];
    optional int32 min_exact_prefix = 3 [default = 2];
};

message SetRequest {
    required string key = 1;
    required string value = 2;
};

message DeleteRequest {
    required string key = 1;
}

message ContainsRequest {
    required string key = 1;
};

message ContainsResponse {
    required bool contains = 1;
}

message MSetRequest {
    map<string, string> key_values = 1;
}

message ForceMergeRequest {
    optional int32 max_segments = 1 [default = 1];
}

message FlushRequest {
    optional bool asynchronous = 1 [default = false];
}

message EmptyBodyResponse {
};

message StringValueResponse {
    required string value = 1;
};

message GetNearResponse {
    repeated Match matches = 1;
};

message GetFuzzyResponse {
    repeated Match matches = 1;
};

service Index {
    rpc Delete(DeleteRequest) returns (EmptyBodyResponse);
    rpc GetRaw(GetRawRequest) returns (StringValueResponse);
    rpc Contains(ContainsRequest) returns (ContainsResponse);
    rpc Info(InfoRequest) returns (InfoResponse);
    rpc Get(GetRequest) returns (StringValueResponse);
    rpc GetNear(GetNearRequest) returns (GetNearResponse);
    rpc GetFuzzy(GetFuzzyRequest) returns (GetFuzzyResponse);    
    rpc Set(SetRequest) returns (EmptyBodyResponse);
    rpc MSet(MSetRequest) returns (EmptyBodyResponse);
    rpc ForceMerge(ForceMergeRequest) returns (EmptyBodyResponse);
    rpc Flush(FlushRequest) returns (EmptyBodyResponse);
};
